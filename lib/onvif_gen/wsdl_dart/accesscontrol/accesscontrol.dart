/// GENERATED BY OZIBABA
import 'dart:typed_data';
import 'package:json_annotation/json_annotation.dart';

/// 
/// The service capabilities reflect optional functionality of a service.
/// The information is static and does not change during device operation.
/// The following capabilities are available:
/// 
@JsonSerializable()
class ServiceCapabilities  {
  /// The maximum number of entries returned by a single Get<Entity>List or
/// Get<Entity> request.
/// The device shall never return more than this number of entities in a single response.
/// 
@JsonKey(name: 'MaxLimit')
final int maxLimit;
  /// 
/// Indicates the maximum number of access points supported by the device.
/// 
@JsonKey(name: 'MaxAccessPoints')
final int maxAccessPoints;
  /// 
/// Indicates the maximum number of areas supported by the device.
/// 
@JsonKey(name: 'MaxAreas')
final int maxAreas;
  /// 
/// Indicates that the client is allowed to supply the token when creating access
/// points and areas.
/// To enable the use of the commands SetAccessPoint and SetArea, the value must be set to true.
/// 
@JsonKey(name: 'ClientSuppliedTokenSupported')
final bool clientSuppliedTokenSupported;
  ServiceCapabilities({
        required this.maxLimit,
        required this.maxAccessPoints,
        required this.maxAreas,
        required this.clientSuppliedTokenSupported,
  });
}

/// 
/// Used as extension base for AccessPointInfo.
/// 

/// 
/// The AccessPointInfo structure contains basic information about an access point instance. 
/// An access point defines an entity a credential can be granted or denied access to. 
/// The AccessPointInfo structure provides basic information on how access is controlled 
/// in one direction for a door (from which area to which area).
/// Multiple access points may cover the same door. A typical case is one access point for 
/// entry and another for exit, both referencing the same door. 
/// 
class AccessPointInfo {}
/// 
/// The AccessPoint structure shall include all properties of the AccessPointInfo structure,
/// a reference to an authentication profile instance, and optionally a number of input and output devices.
/// 
class AccessPoint {}
class AccessPointExtension {}
/// 
/// The AccessPoint capabilities reflect optional functionality of a particular physical entity.
/// Different AccessPoint instances may have different set of capabilities. This information may
/// change during device operation, e.g. if hardware settings are changed.
/// The following capabilities are available:
/// 
@JsonSerializable()
class AccessPointCapabilities  {
  /// A list of security level tokens that this access point supports.
/// See [Authentication Behavior Service Specification].
/// 
@JsonKey(name: 'SupportedSecurityLevels')
final ReferenceToken? supportedSecurityLevels;
  @JsonKey(name: 'Extension')
final SupportedSecurityLevelsExtension? extension_;
  /// 
/// Indicates whether or not this AccessPoint instance supports EnableAccessPoint
/// and DisableAccessPoint commands.
/// 
@JsonKey(name: 'DisableAccessPoint')
final bool disableAccessPoint;
  /// 
/// Indicates whether or not this AccessPoint instance supports generation of duress events.
/// 
@JsonKey(name: 'Duress')
final bool duress;
  /// 
/// Indicates whether or not this AccessPoint has a REX switch or other input that
/// allows anonymous access.
/// 
@JsonKey(name: 'AnonymousAccess')
final bool anonymousAccess;
  /// 
/// Indicates whether or not this AccessPoint instance supports generation of
/// AccessTaken and AccessNotTaken events. If AnonymousAccess and AccessTaken are both true, it
/// indicates that the Anonymous versions of AccessTaken and AccessNotTaken are supported.
/// 
@JsonKey(name: 'AccessTaken')
final bool accessTaken;
  /// 
/// Indicates whether or not this AccessPoint instance supports the
/// ExternalAuthorization operation and the generation of Request events. If AnonymousAccess and
/// ExternalAuthorization are both true, it indicates that the Anonymous version is supported as
/// well.
/// 
@JsonKey(name: 'ExternalAuthorization')
final bool externalAuthorization;
  AccessPointCapabilities({
        this.supportedSecurityLevels,
        this.extension_,
        required this.disableAccessPoint,
        required this.duress,
        required this.anonymousAccess,
        required this.accessTaken,
        required this.externalAuthorization,
  });
}

class SupportedSecurityLevelsExtension {}
/// 
/// Basic information about an Area. Used as extension base.
/// 

/// 
/// The AreaInfo structure contains basic information about an Area.
/// An ONVIF compliant device shall provide the following fields for each Area:
/// 
class AreaInfo {}
/// 
/// The Area structure shall include all properties of the AreaInfo structure and optionally
/// a parent area token, an OccupancyControl structure and/or an Antipassback structure.
/// 
class Area {}
class AreaExtension {}
/// 
/// The AccessPointState contains state information for an AccessPoint.
/// An ONVIF compliant device shall provide the following fields for each AccessPoint instance:
/// 
@JsonSerializable()
class AccessPointState  {
  /// Indicates that the AccessPoint is enabled. By default this field value
/// shall be True, if the DisableAccessPoint capabilities is not supported.
/// 
@JsonKey(name: 'Enabled')
final bool enabled;
  AccessPointState({
        required this.enabled,
  });
}

/// 
/// The Decision enumeration represents a choice of two available options for an access request:
/// 
enum Decision {
  @JsonValue("Granted")
  Granted,
  @JsonValue("Denied")
  Denied,
}

/// 
/// Non-normative enum that describes the various reasons for denying access.
/// The following strings shall be used for the reason field:
/// 
enum DenyReason {
  @JsonValue("CredentialNotEnabled")
  CredentialNotEnabled,
  @JsonValue("CredentialNotActive")
  CredentialNotActive,
  @JsonValue("CredentialExpired")
  CredentialExpired,
  @JsonValue("InvalidPIN")
  InvalidPIN,
  @JsonValue("NotPermittedAtThisTime")
  NotPermittedAtThisTime,
  @JsonValue("Unauthorized")
  Unauthorized,
  @JsonValue("Other")
  Other,
}

class GetServiceCapabilities {}
@JsonSerializable()
class GetServiceCapabilitiesResponse  {
  /// The capability response message contains the requested Access Control
/// service capabilities using a hierarchical XML capability structure.
/// 
@JsonKey(name: 'Capabilities')
final ServiceCapabilities capabilities;
  GetServiceCapabilitiesResponse({
        required this.capabilities,
  });
}

@JsonSerializable()
class GetAccessPointInfoList  {
  /// Maximum number of entries to return. If not specified, less than one
/// or higher than what the device supports, the number of items is determined by the
/// device.
/// 
@JsonKey(name: 'Limit')
final int? limit;
  /// Start returning entries from this start reference. If not specified,
/// entries shall start from the beginning of the dataset.
/// 
@JsonKey(name: 'StartReference')
final String? startReference;
  GetAccessPointInfoList({
        this.limit,
        this.startReference,
  });
}

@JsonSerializable()
class GetAccessPointInfoListResponse  {
  /// StartReference to use in next call to get the following items. If
/// absent, no more items to get.
/// 
@JsonKey(name: 'NextStartReference')
final String? nextStartReference;
  /// List of AccessPointInfo items.
@JsonKey(name: 'AccessPointInfo')
final AccessPointInfo? accessPointInfo;
  GetAccessPointInfoListResponse({
        this.nextStartReference,
        this.accessPointInfo,
  });
}

@JsonSerializable()
class GetAccessPointInfo  {
  /// Tokens of AccessPointInfo items to get.
@JsonKey(name: 'Token')
final ReferenceToken token;
  GetAccessPointInfo({
        required this.token,
  });
}

@JsonSerializable()
class GetAccessPointInfoResponse  {
  /// List of AccessPointInfo items.
@JsonKey(name: 'AccessPointInfo')
final AccessPointInfo? accessPointInfo;
  GetAccessPointInfoResponse({
        this.accessPointInfo,
  });
}

@JsonSerializable()
class GetAccessPointList  {
  /// Maximum number of entries to return. If not specified, less than one
/// or higher than what the device supports, the number of items is determined by the
/// device.
/// 
@JsonKey(name: 'Limit')
final int? limit;
  /// Start returning entries from this start reference. If not specified,
/// entries shall start from the beginning of the dataset.
/// 
@JsonKey(name: 'StartReference')
final String? startReference;
  GetAccessPointList({
        this.limit,
        this.startReference,
  });
}

@JsonSerializable()
class GetAccessPointListResponse  {
  /// StartReference to use in next call to get the following items. If
/// absent, no more items to get.
/// 
@JsonKey(name: 'NextStartReference')
final String? nextStartReference;
  /// List of AccessPoint items.
@JsonKey(name: 'AccessPoint')
final AccessPoint? accessPoint;
  GetAccessPointListResponse({
        this.nextStartReference,
        this.accessPoint,
  });
}

@JsonSerializable()
class GetAccessPoints  {
  /// Tokens of AccessPoint items to get.
@JsonKey(name: 'Token')
final ReferenceToken token;
  GetAccessPoints({
        required this.token,
  });
}

@JsonSerializable()
class GetAccessPointsResponse  {
  /// List of AccessPoint items.
@JsonKey(name: 'AccessPoint')
final AccessPoint? accessPoint;
  GetAccessPointsResponse({
        this.accessPoint,
  });
}

@JsonSerializable()
class CreateAccessPoint  {
  /// AccessPoint item to create
@JsonKey(name: 'AccessPoint')
final AccessPoint accessPoint;
  CreateAccessPoint({
        required this.accessPoint,
  });
}

@JsonSerializable()
class CreateAccessPointResponse  {
  /// Token of created AccessPoint item
@JsonKey(name: 'Token')
final ReferenceToken token;
  CreateAccessPointResponse({
        required this.token,
  });
}

@JsonSerializable()
class SetAccessPoint  {
  /// AccessPoint item to create or modify
@JsonKey(name: 'AccessPoint')
final AccessPoint accessPoint;
  SetAccessPoint({
        required this.accessPoint,
  });
}

class SetAccessPointResponse {}
@JsonSerializable()
class ModifyAccessPoint  {
  /// AccessPoint item to modify
@JsonKey(name: 'AccessPoint')
final AccessPoint accessPoint;
  ModifyAccessPoint({
        required this.accessPoint,
  });
}

class ModifyAccessPointResponse {}
@JsonSerializable()
class DeleteAccessPoint  {
  /// Token of AccessPoint item to delete.
@JsonKey(name: 'Token')
final ReferenceToken token;
  DeleteAccessPoint({
        required this.token,
  });
}

class DeleteAccessPointResponse {}
@JsonSerializable()
class SetAccessPointAuthenticationProfile  {
  /// Token of the AccessPoint.
@JsonKey(name: 'Token')
final ReferenceToken token;
  /// Token of the AuthenticationProfile.
@JsonKey(name: 'AuthenticationProfileToken')
final ReferenceToken authenticationProfileToken;
  SetAccessPointAuthenticationProfile({
        required this.token,
        required this.authenticationProfileToken,
  });
}

class SetAccessPointAuthenticationProfileResponse {}
@JsonSerializable()
class DeleteAccessPointAuthenticationProfile  {
  /// Token of the AccessPoint.
@JsonKey(name: 'Token')
final ReferenceToken token;
  DeleteAccessPointAuthenticationProfile({
        required this.token,
  });
}

class DeleteAccessPointAuthenticationProfileResponse {}
@JsonSerializable()
class GetAreaInfoList  {
  /// Maximum number of entries to return. If not specified, less than one
/// or higher than what the device supports, the number of items is determined by the
/// device.
/// 
@JsonKey(name: 'Limit')
final int? limit;
  /// Start returning entries from this start reference. If not specified,
/// entries shall start from the beginning of the dataset.
/// 
@JsonKey(name: 'StartReference')
final String? startReference;
  GetAreaInfoList({
        this.limit,
        this.startReference,
  });
}

@JsonSerializable()
class GetAreaInfoListResponse  {
  /// StartReference to use in next call to get the following items. If
/// absent, no more items to get.
/// 
@JsonKey(name: 'NextStartReference')
final String? nextStartReference;
  /// List of AreaInfo items.
@JsonKey(name: 'AreaInfo')
final AreaInfo? areaInfo;
  GetAreaInfoListResponse({
        this.nextStartReference,
        this.areaInfo,
  });
}

@JsonSerializable()
class GetAreaInfo  {
  /// Tokens of AreaInfo items to get.
@JsonKey(name: 'Token')
final ReferenceToken token;
  GetAreaInfo({
        required this.token,
  });
}

@JsonSerializable()
class GetAreaInfoResponse  {
  /// List of AreaInfo items.
@JsonKey(name: 'AreaInfo')
final AreaInfo? areaInfo;
  GetAreaInfoResponse({
        this.areaInfo,
  });
}

@JsonSerializable()
class GetAreaList  {
  /// Maximum number of entries to return. If not specified, less than one
/// or higher than what the device supports, the number of items is determined by the
/// device.
/// 
@JsonKey(name: 'Limit')
final int? limit;
  /// Start returning entries from this start reference. If not specified,
/// entries shall start from the beginning of the dataset.
/// 
@JsonKey(name: 'StartReference')
final String? startReference;
  GetAreaList({
        this.limit,
        this.startReference,
  });
}

@JsonSerializable()
class GetAreaListResponse  {
  /// StartReference to use in next call to get the following items. If
/// absent, no more items to get.
/// 
@JsonKey(name: 'NextStartReference')
final String? nextStartReference;
  /// List of Area items.
@JsonKey(name: 'Area')
final Area? area;
  GetAreaListResponse({
        this.nextStartReference,
        this.area,
  });
}

@JsonSerializable()
class GetAreas  {
  /// Tokens of Area items to get.
@JsonKey(name: 'Token')
final ReferenceToken token;
  GetAreas({
        required this.token,
  });
}

@JsonSerializable()
class GetAreasResponse  {
  /// List of Area items.
@JsonKey(name: 'Area')
final Area? area;
  GetAreasResponse({
        this.area,
  });
}

@JsonSerializable()
class CreateArea  {
  /// Area item to create
@JsonKey(name: 'Area')
final Area area;
  CreateArea({
        required this.area,
  });
}

@JsonSerializable()
class CreateAreaResponse  {
  /// Token of created Area item
@JsonKey(name: 'Token')
final ReferenceToken token;
  CreateAreaResponse({
        required this.token,
  });
}

@JsonSerializable()
class SetArea  {
  /// Area item to create or modify
@JsonKey(name: 'Area')
final Area area;
  SetArea({
        required this.area,
  });
}

class SetAreaResponse {}
@JsonSerializable()
class ModifyArea  {
  /// Area item to modify
@JsonKey(name: 'Area')
final Area area;
  ModifyArea({
        required this.area,
  });
}

class ModifyAreaResponse {}
@JsonSerializable()
class DeleteArea  {
  /// Token of Area item to delete.
@JsonKey(name: 'Token')
final ReferenceToken token;
  DeleteArea({
        required this.token,
  });
}

class DeleteAreaResponse {}
@JsonSerializable()
class GetAccessPointState  {
  /// Token of AccessPoint instance to get AccessPointState for.
/// 
@JsonKey(name: 'Token')
final ReferenceToken token;
  GetAccessPointState({
        required this.token,
  });
}

@JsonSerializable()
class GetAccessPointStateResponse  {
  /// AccessPointState item.
@JsonKey(name: 'AccessPointState')
final AccessPointState accessPointState;
  GetAccessPointStateResponse({
        required this.accessPointState,
  });
}

@JsonSerializable()
class EnableAccessPoint  {
  /// Token of the AccessPoint instance to enable.
@JsonKey(name: 'Token')
final ReferenceToken token;
  EnableAccessPoint({
        required this.token,
  });
}

class EnableAccessPointResponse {}
@JsonSerializable()
class DisableAccessPoint  {
  /// Token of the AccessPoint instance to disable.
@JsonKey(name: 'Token')
final ReferenceToken token;
  DisableAccessPoint({
        required this.token,
  });
}

class DisableAccessPointResponse {}
@JsonSerializable()
class ExternalAuthorization  {
  /// Token of the Access Point instance.
@JsonKey(name: 'AccessPointToken')
final ReferenceToken accessPointToken;
  /// Optional token of the Credential involved.
@JsonKey(name: 'CredentialToken')
final ReferenceToken? credentialToken;
  /// Optional reason for decision.
@JsonKey(name: 'Reason')
final String? reason;
  /// Decision - Granted or Denied.
@JsonKey(name: 'Decision')
final Decision decision;
  ExternalAuthorization({
        required this.accessPointToken,
        this.credentialToken,
        this.reason,
        required this.decision,
  });
}

class ExternalAuthorizationResponse {}
