/// GENERATED BY OZIBABA
import 'dart:typed_data';
import 'package:json_annotation/json_annotation.dart';

import 'package:dart_wsdl_gen/onvif_gen/xsd_dart/lib.dart';
class GetServiceCapabilities {}
@JsonSerializable()
class GetServiceCapabilitiesResponse  {
  /// The capabilities for the PTZ service is returned in the Capabilities element.
@JsonKey(name: 'Capabilities')
final Capabilities capabilities;
  GetServiceCapabilitiesResponse({
        required this.capabilities,
  });
}

@JsonSerializable()
class Capabilities  {
  /// Indicates whether or not EFlip is supported.
@JsonKey(name: 'EFlip')
final bool eFlip;
  /// Indicates whether or not reversing of PT control direction is supported.
@JsonKey(name: 'Reverse')
final bool reverse;
  /// Indicates support for the GetCompatibleConfigurations command.
@JsonKey(name: 'GetCompatibleConfigurations')
final bool getCompatibleConfigurations;
  /// Indicates that the PTZStatus includes MoveStatus information.
@JsonKey(name: 'MoveStatus')
final bool moveStatus;
  /// Indicates that the PTZStatus includes Position information.
@JsonKey(name: 'StatusPosition')
final bool statusPosition;
  Capabilities({
        required this.eFlip,
        required this.reverse,
        required this.getCompatibleConfigurations,
        required this.moveStatus,
        required this.statusPosition,
  });
}

class GetNodes {}
@JsonSerializable()
class GetNodesResponse  {
  /// A list of the existing PTZ Nodes on the device.
/// 
@JsonKey(name: 'PTZNode')
final PTZNode? pTZNode;
  GetNodesResponse({
        this.pTZNode,
  });
}

@JsonSerializable()
class GetNode  {
  /// Token of the requested PTZNode.
/// 
@JsonKey(name: 'NodeToken')
final ReferenceToken nodeToken;
  GetNode({
        required this.nodeToken,
  });
}

@JsonSerializable()
class GetNodeResponse  {
  /// A requested PTZNode.
/// 
@JsonKey(name: 'PTZNode')
final PTZNode pTZNode;
  GetNodeResponse({
        required this.pTZNode,
  });
}

class GetConfigurations {}
@JsonSerializable()
class GetConfigurationsResponse  {
  /// A list of all existing PTZConfigurations on the device.
/// 
@JsonKey(name: 'PTZConfiguration')
final PTZConfiguration? pTZConfiguration;
  GetConfigurationsResponse({
        this.pTZConfiguration,
  });
}

@JsonSerializable()
class GetConfiguration  {
  /// Token of the requested PTZConfiguration.
/// 
@JsonKey(name: 'PTZConfigurationToken')
final ReferenceToken pTZConfigurationToken;
  GetConfiguration({
        required this.pTZConfigurationToken,
  });
}

@JsonSerializable()
class GetConfigurationResponse  {
  /// A requested PTZConfiguration.
/// 
@JsonKey(name: 'PTZConfiguration')
final PTZConfiguration pTZConfiguration;
  GetConfigurationResponse({
        required this.pTZConfiguration,
  });
}

@JsonSerializable()
class SetConfiguration  {
  /// 
/// 
@JsonKey(name: 'PTZConfiguration')
final PTZConfiguration pTZConfiguration;
  /// Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// 
@JsonKey(name: 'ForcePersistence')
final bool forcePersistence;
  SetConfiguration({
        required this.pTZConfiguration,
        required this.forcePersistence,
  });
}

class SetConfigurationResponse {}
@JsonSerializable()
class GetConfigurationOptions  {
  /// Token of an existing configuration that the options are intended for.
/// 
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  GetConfigurationOptions({
        required this.configurationToken,
  });
}

@JsonSerializable()
class GetConfigurationOptionsResponse  {
  /// The requested PTZ configuration options.
/// 
@JsonKey(name: 'PTZConfigurationOptions')
final PTZConfigurationOptions pTZConfigurationOptions;
  GetConfigurationOptionsResponse({
        required this.pTZConfigurationOptions,
  });
}

@JsonSerializable()
class SendAuxiliaryCommand  {
  /// A reference to the MediaProfile where the operation should take place.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// The Auxiliary request data.
/// 
@JsonKey(name: 'AuxiliaryData')
final AuxiliaryData auxiliaryData;
  SendAuxiliaryCommand({
        required this.profileToken,
        required this.auxiliaryData,
  });
}

@JsonSerializable()
class SendAuxiliaryCommandResponse  {
  /// The response contains the auxiliary response.
/// 
@JsonKey(name: 'AuxiliaryResponse')
final AuxiliaryData auxiliaryResponse;
  SendAuxiliaryCommandResponse({
        required this.auxiliaryResponse,
  });
}

@JsonSerializable()
class GetPresets  {
  /// A reference to the MediaProfile where the operation should take place.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  GetPresets({
        required this.profileToken,
  });
}

@JsonSerializable()
class GetPresetsResponse  {
  /// A list of presets which are available for the requested MediaProfile.
/// 
@JsonKey(name: 'Preset')
final PTZPreset? preset;
  GetPresetsResponse({
        this.preset,
  });
}

@JsonSerializable()
class SetPreset  {
  /// A reference to the MediaProfile where the operation should take place.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// A requested preset name.
/// 
@JsonKey(name: 'PresetName')
final String? presetName;
  /// A requested preset token.
/// 
@JsonKey(name: 'PresetToken')
final ReferenceToken? presetToken;
  SetPreset({
        required this.profileToken,
        this.presetName,
        this.presetToken,
  });
}

@JsonSerializable()
class SetPresetResponse  {
  /// A token to the Preset which has been set.
/// 
@JsonKey(name: 'PresetToken')
final ReferenceToken presetToken;
  SetPresetResponse({
        required this.presetToken,
  });
}

@JsonSerializable()
class RemovePreset  {
  /// A reference to the MediaProfile where the operation should take place.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// A requested preset token.
/// 
@JsonKey(name: 'PresetToken')
final ReferenceToken presetToken;
  RemovePreset({
        required this.profileToken,
        required this.presetToken,
  });
}

class RemovePresetResponse {}
@JsonSerializable()
class GotoPreset  {
  /// A reference to the MediaProfile where the operation should take place.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// A requested preset token.
/// 
@JsonKey(name: 'PresetToken')
final ReferenceToken presetToken;
  /// A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// 
@JsonKey(name: 'Speed')
final PTZSpeed? speed;
  GotoPreset({
        required this.profileToken,
        required this.presetToken,
        this.speed,
  });
}

class GotoPresetResponse {}
@JsonSerializable()
class GetStatus  {
  /// A reference to the MediaProfile where the PTZStatus should be requested.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  GetStatus({
        required this.profileToken,
  });
}

@JsonSerializable()
class GetStatusResponse  {
  /// The PTZStatus for the requested MediaProfile.
/// 
@JsonKey(name: 'PTZStatus')
final PTZStatus pTZStatus;
  GetStatusResponse({
        required this.pTZStatus,
  });
}

@JsonSerializable()
class GotoHomePosition  {
  /// A reference to the MediaProfile where the operation should take place.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// 
@JsonKey(name: 'Speed')
final PTZSpeed? speed;
  GotoHomePosition({
        required this.profileToken,
        this.speed,
  });
}

class GotoHomePositionResponse {}
@JsonSerializable()
class SetHomePosition  {
  /// A reference to the MediaProfile where the home position should be set.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  SetHomePosition({
        required this.profileToken,
  });
}

class SetHomePositionResponse {}
@JsonSerializable()
class ContinuousMove  {
  /// A reference to the MediaProfile.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// A Velocity vector specifying the velocity of pan, tilt and zoom.
/// 
@JsonKey(name: 'Velocity')
final PTZSpeed velocity;
  /// An optional Timeout parameter.
/// 
@JsonKey(name: 'Timeout')
final Duration? timeout;
  ContinuousMove({
        required this.profileToken,
        required this.velocity,
        this.timeout,
  });
}

class ContinuousMoveResponse {}
@JsonSerializable()
class RelativeMove  {
  /// A reference to the MediaProfile.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// A positional Translation relative to the current position
/// 
@JsonKey(name: 'Translation')
final PTZVector translation;
  /// An optional Speed parameter.
/// 
@JsonKey(name: 'Speed')
final PTZSpeed? speed;
  RelativeMove({
        required this.profileToken,
        required this.translation,
        this.speed,
  });
}

class RelativeMoveResponse {}
@JsonSerializable()
class AbsoluteMove  {
  /// A reference to the MediaProfile.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// A Position vector specifying the absolute target position.
/// 
@JsonKey(name: 'Position')
final PTZVector position;
  /// An optional Speed.
/// 
@JsonKey(name: 'Speed')
final PTZSpeed? speed;
  AbsoluteMove({
        required this.profileToken,
        required this.position,
        this.speed,
  });
}

class AbsoluteMoveResponse {}
@JsonSerializable()
class GeoMove  {
  /// A reference to the MediaProfile.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// The geolocation of the target position.
/// 
@JsonKey(name: 'Target')
final GeoLocation target;
  /// An optional Speed.
/// 
@JsonKey(name: 'Speed')
final PTZSpeed? speed;
  /// An optional indication of the height of the target/area.
/// 
@JsonKey(name: 'AreaHeight')
final double? areaHeight;
  /// An optional indication of the width of the target/area.
/// 
@JsonKey(name: 'AreaWidth')
final double? areaWidth;
  GeoMove({
        required this.profileToken,
        required this.target,
        this.speed,
        this.areaHeight,
        this.areaWidth,
  });
}

class GeoMoveResponse {}
@JsonSerializable()
class Stop  {
  /// A reference to the MediaProfile that indicate what should be stopped.
/// 
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  /// Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// 
@JsonKey(name: 'PanTilt')
final bool? panTilt;
  /// Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// 
@JsonKey(name: 'Zoom')
final bool? zoom;
  Stop({
        required this.profileToken,
        this.panTilt,
        this.zoom,
  });
}

class StopResponse {}
@JsonSerializable()
class GetPresetTours  {
  @JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  GetPresetTours({
        required this.profileToken,
  });
}

@JsonSerializable()
class GetPresetToursResponse  {
  @JsonKey(name: 'PresetTour')
final PresetTour? presetTour;
  GetPresetToursResponse({
        this.presetTour,
  });
}

@JsonSerializable()
class GetPresetTour  {
  @JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  @JsonKey(name: 'PresetTourToken')
final ReferenceToken presetTourToken;
  GetPresetTour({
        required this.profileToken,
        required this.presetTourToken,
  });
}

@JsonSerializable()
class GetPresetTourResponse  {
  @JsonKey(name: 'PresetTour')
final PresetTour presetTour;
  GetPresetTourResponse({
        required this.presetTour,
  });
}

@JsonSerializable()
class GetPresetTourOptions  {
  @JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  @JsonKey(name: 'PresetTourToken')
final ReferenceToken? presetTourToken;
  GetPresetTourOptions({
        required this.profileToken,
        this.presetTourToken,
  });
}

@JsonSerializable()
class GetPresetTourOptionsResponse  {
  @JsonKey(name: 'Options')
final PTZPresetTourOptions options;
  GetPresetTourOptionsResponse({
        required this.options,
  });
}

@JsonSerializable()
class CreatePresetTour  {
  @JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  CreatePresetTour({
        required this.profileToken,
  });
}

@JsonSerializable()
class CreatePresetTourResponse  {
  @JsonKey(name: 'PresetTourToken')
final ReferenceToken presetTourToken;
  CreatePresetTourResponse({
        required this.presetTourToken,
  });
}

@JsonSerializable()
class ModifyPresetTour  {
  @JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  @JsonKey(name: 'PresetTour')
final PresetTour presetTour;
  ModifyPresetTour({
        required this.profileToken,
        required this.presetTour,
  });
}

class ModifyPresetTourResponse {}
@JsonSerializable()
class OperatePresetTour  {
  @JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  @JsonKey(name: 'PresetTourToken')
final ReferenceToken presetTourToken;
  @JsonKey(name: 'Operation')
final PTZPresetTourOperation operation;
  OperatePresetTour({
        required this.profileToken,
        required this.presetTourToken,
        required this.operation,
  });
}

class OperatePresetTourResponse {}
@JsonSerializable()
class RemovePresetTour  {
  @JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  @JsonKey(name: 'PresetTourToken')
final ReferenceToken presetTourToken;
  RemovePresetTour({
        required this.profileToken,
        required this.presetTourToken,
  });
}

class RemovePresetTourResponse {}
@JsonSerializable()
class GetCompatibleConfigurations  {
  /// Contains the token of an existing media profile the configurations shall be compatible with.
@JsonKey(name: 'ProfileToken')
final ReferenceToken profileToken;
  GetCompatibleConfigurations({
        required this.profileToken,
  });
}

@JsonSerializable()
class GetCompatibleConfigurationsResponse  {
  /// A list of all existing PTZConfigurations on the NVT that is suitable to be added to the addressed media profile.
/// 
@JsonKey(name: 'PTZConfiguration')
final PTZConfiguration? pTZConfiguration;
  GetCompatibleConfigurationsResponse({
        this.pTZConfiguration,
  });
}

