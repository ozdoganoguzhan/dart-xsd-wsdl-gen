import '../ws-addr/ws-addr.dart';
import '../bf-2/bf-2.dart';
import '../t-1/t-1.dart';
/// GENERATED BY OZIBABA
import 'dart:typed_data';
import 'package:json_annotation/json_annotation.dart';

@JsonSerializable()
class QueryExpressionType  {
  @JsonKey(name: 'Dialect')
final String dialect;
  QueryExpressionType({
        required this.dialect,
  });
}

@JsonSerializable()
class TopicExpressionType  {
  @JsonKey(name: 'Dialect')
final String dialect;
  TopicExpressionType({
        required this.dialect,
  });
}

class FilterType {}
class SubscriptionPolicyType {}
class NotificationProducerRP {}
class SubscriptionManagerRP {}
class NotificationMessageHolderType {}
class Notify {}

class UseRaw {}
@JsonSerializable()
class Subscribe  {
  @JsonKey(name: 'ConsumerReference')
final EndpointReferenceType consumerReference;
  @JsonKey(name: 'Filter')
final FilterType? filter;
  @JsonKey(name: 'InitialTerminationTime')
final AbsoluteOrRelativeTimeType? initialTerminationTime;
  Subscribe({
        required this.consumerReference,
        this.filter,
        this.initialTerminationTime,
  });
}

@JsonSerializable()
class SubscribeResponse  {
  @JsonKey(name: 'SubscriptionReference')
final EndpointReferenceType subscriptionReference;
  SubscribeResponse({
        required this.subscriptionReference,
  });
}

@JsonSerializable()
class GetCurrentMessage  {
  @JsonKey(name: 'Topic')
final TopicExpressionType topic;
  GetCurrentMessage({
        required this.topic,
  });
}

class GetCurrentMessageResponse {}













@JsonSerializable()
class GetMessages  {
  @JsonKey(name: 'MaximumNumber')
final int? maximumNumber;
  GetMessages({
        this.maximumNumber,
  });
}

class GetMessagesResponse {}
class DestroyPullPoint {}
class DestroyPullPointResponse {}


class CreatePullPoint {}
@JsonSerializable()
class CreatePullPointResponse  {
  @JsonKey(name: 'PullPoint')
final EndpointReferenceType pullPoint;
  CreatePullPointResponse({
        required this.pullPoint,
  });
}


@JsonSerializable()
class Renew  {
  @JsonKey(name: 'TerminationTime')
final AbsoluteOrRelativeTimeType? terminationTime;
  Renew({
        this.terminationTime,
  });
}

class RenewResponse {}

class Unsubscribe {}
class UnsubscribeResponse {}

class PauseSubscription {}
class PauseSubscriptionResponse {}
class ResumeSubscription {}
class ResumeSubscriptionResponse {}


