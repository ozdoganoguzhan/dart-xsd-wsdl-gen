/// GENERATED BY OZIBABA
import 'dart:typed_data';
import 'package:json_annotation/json_annotation.dart';

class GetServiceCapabilities {}
@JsonSerializable()
class GetServiceCapabilitiesResponse  {
  /// The capabilities for the event service is returned in the Capabilities element.
@JsonKey(name: 'Capabilities')
final Capabilities capabilities;
  GetServiceCapabilitiesResponse({
        required this.capabilities,
  });
}

@JsonSerializable()
class Capabilities  {
  /// Indicates that the WS Subscription policy is supported.
@JsonKey(name: 'WSSubscriptionPolicySupport')
final bool wSSubscriptionPolicySupport;
  /// Indicates that the WS Pull Point is supported.
@JsonKey(name: 'WSPullPointSupport')
final bool wSPullPointSupport;
  /// Indicates that the WS Pausable Subscription Manager Interface is supported.
@JsonKey(name: 'WSPausableSubscriptionManagerInterfaceSupport')
final bool wSPausableSubscriptionManagerInterfaceSupport;
  /// Maximum number of supported notification producers as defined by WS-BaseNotification.
@JsonKey(name: 'MaxNotificationProducers')
final int maxNotificationProducers;
  /// Maximum supported number of notification pull points.
@JsonKey(name: 'MaxPullPoints')
final int maxPullPoints;
  /// Indication if the device supports persistent notification storage.
@JsonKey(name: 'PersistentNotificationStorage')
final bool persistentNotificationStorage;
  Capabilities({
        required this.wSSubscriptionPolicySupport,
        required this.wSPullPointSupport,
        required this.wSPausableSubscriptionManagerInterfaceSupport,
        required this.maxNotificationProducers,
        required this.maxPullPoints,
        required this.persistentNotificationStorage,
  });
}

@JsonSerializable()
class CreatePullPointSubscription  {
  /// Optional XPATH expression to select specific topics.
@JsonKey(name: 'Filter')
final FilterType? filter;
  /// Initial termination time.
@JsonKey(name: 'InitialTerminationTime')
final AbsoluteOrRelativeTimeType? initialTerminationTime;
  CreatePullPointSubscription({
        this.filter,
        this.initialTerminationTime,
  });
}

@JsonSerializable()
class CreatePullPointSubscriptionResponse  {
  /// Endpoint reference of the subscription to be used for pulling the messages.
@JsonKey(name: 'SubscriptionReference')
final EndpointReferenceType subscriptionReference;
  CreatePullPointSubscriptionResponse({
        required this.subscriptionReference,
  });
}

@JsonSerializable()
class PullMessages  {
  /// Maximum time to block until this method returns.
@JsonKey(name: 'Timeout')
final Duration timeout;
  /// Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.
@JsonKey(name: 'MessageLimit')
final int messageLimit;
  PullMessages({
        required this.timeout,
        required this.messageLimit,
  });
}

@JsonSerializable()
class PullMessagesResponse  {
  /// The date and time when the messages have been delivered by the web server to the client.
@JsonKey(name: 'CurrentTime')
final DateTime currentTime;
  /// Date time when the PullPoint will be shut down without further pull requests.
@JsonKey(name: 'TerminationTime')
final DateTime terminationTime;
  PullMessagesResponse({
        required this.currentTime,
        required this.terminationTime,
  });
}

@JsonSerializable()
class PullMessagesFaultResponse  {
  /// Maximum timeout supported by the device.
@JsonKey(name: 'MaxTimeout')
final Duration maxTimeout;
  /// Maximum message limit supported by the device.
@JsonKey(name: 'MaxMessageLimit')
final int maxMessageLimit;
  PullMessagesFaultResponse({
        required this.maxTimeout,
        required this.maxMessageLimit,
  });
}

@JsonSerializable()
class Seek  {
  /// The date and time to match against stored messages.
@JsonKey(name: 'UtcTime')
final DateTime utcTime;
  /// Reverse the pull direction of PullMessages.
@JsonKey(name: 'Reverse')
final bool? reverse;
  Seek({
        required this.utcTime,
        this.reverse,
  });
}

class SeekResponse {}
class SetSynchronizationPoint {}
class SetSynchronizationPointResponse {}
class GetEventProperties {}
@JsonSerializable()
class GetEventPropertiesResponse  {
  /// List of topic namespaces supported.
@JsonKey(name: 'TopicNamespaceLocation')
final String topicNamespaceLocation;
  /// 
/// Defines the XPath function set supported for message content filtering. 
/// The following MessageContentFilterDialects should be returned if a device supports the message content filtering:
/// 
/// http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.
/// 
/// A device that does not support any MessageContentFilterDialect returns a single empty url.
/// 
@JsonKey(name: 'MessageContentFilterDialect')
final String messageContentFilterDialect;
  /// 
/// Optional ProducerPropertiesDialects. Refer to Web Services Base Notification 1.3 (WS-BaseNotification) for advanced filtering.
@JsonKey(name: 'ProducerPropertiesFilterDialect')
final String? producerPropertiesFilterDialect;
  /// 
/// The Message Content Description Language allows referencing
/// of vendor-specific types. In order to ease the integration of such types into a client application,
/// the GetEventPropertiesResponse shall list all URI locations to schema files whose types are
/// used in the description of notifications, with MessageContentSchemaLocation elements. 
/// This list shall at least contain the URI of the ONVIF schema file.
@JsonKey(name: 'MessageContentSchemaLocation')
final String messageContentSchemaLocation;
  GetEventPropertiesResponse({
        required this.topicNamespaceLocation,
        required this.messageContentFilterDialect,
        this.producerPropertiesFilterDialect,
        required this.messageContentSchemaLocation,
  });
}

/// When this element is included in the SubscriptionPolicy, the pullpoint shall not provide Initialized or Deleted events for Properties.
class ChangedOnly {}
