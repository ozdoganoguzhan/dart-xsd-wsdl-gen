/// GENERATED BY OZIBABA
import 'dart:typed_data';
import 'package:json_annotation/json_annotation.dart';

import 'package:dart_wsdl_gen/onvif_gen/xsd_dart/lib.dart';
class GetServiceCapabilities {}
@JsonSerializable()
class GetServiceCapabilitiesResponse  {
  /// The capabilities for the display service is returned in the Capabilities element.
@JsonKey(name: 'Capabilities')
final Capabilities capabilities;
  GetServiceCapabilitiesResponse({
        required this.capabilities,
  });
}

@JsonSerializable()
class Capabilities  {
  /// Indication that the SetLayout command supports only predefined layouts.
@JsonKey(name: 'FixedLayout')
final bool fixedLayout;
  Capabilities({
        required this.fixedLayout,
  });
}

@JsonSerializable()
class GetLayout  {
  /// Token of the Video Output whose Layout is requested
@JsonKey(name: 'VideoOutput')
final ReferenceToken videoOutput;
  GetLayout({
        required this.videoOutput,
  });
}

@JsonSerializable()
class GetLayoutResponse  {
  /// Current layout of the video output.
@JsonKey(name: 'Layout')
final Layout layout;
  GetLayoutResponse({
        required this.layout,
  });
}

@JsonSerializable()
class SetLayout  {
  /// Token of the Video Output whose Layout shall be changed.
@JsonKey(name: 'VideoOutput')
final ReferenceToken videoOutput;
  /// Layout to be set
@JsonKey(name: 'Layout')
final Layout layout;
  SetLayout({
        required this.videoOutput,
        required this.layout,
  });
}

class SetLayoutResponse {}
@JsonSerializable()
class GetDisplayOptions  {
  /// Token of the Video Output whose options are requested
@JsonKey(name: 'VideoOutput')
final ReferenceToken videoOutput;
  GetDisplayOptions({
        required this.videoOutput,
  });
}

@JsonSerializable()
class GetDisplayOptionsResponse  {
  /// The LayoutOptions describe the fixed and predefined layouts of a device. If the device does
/// not offer fixed layouts and allows setting the layout free this element is empty.
@JsonKey(name: 'LayoutOptions')
final LayoutOptions? layoutOptions;
  /// decoding and encoding capabilities of the device
@JsonKey(name: 'CodingCapabilities')
final CodingCapabilities codingCapabilities;
  GetDisplayOptionsResponse({
        this.layoutOptions,
        required this.codingCapabilities,
  });
}

@JsonSerializable()
class GetPaneConfigurations  {
  /// Reference Token of the Video Output whose Pane Configurations are requested
@JsonKey(name: 'VideoOutput')
final ReferenceToken videoOutput;
  GetPaneConfigurations({
        required this.videoOutput,
  });
}

@JsonSerializable()
class GetPaneConfigurationsResponse  {
  /// Contains a list of defined Panes of the specified VideoOutput. Each VideoOutput has at least one PaneConfiguration.
@JsonKey(name: 'PaneConfiguration')
final PaneConfiguration paneConfiguration;
  GetPaneConfigurationsResponse({
        required this.paneConfiguration,
  });
}

@JsonSerializable()
class GetPaneConfiguration  {
  /// Reference Token of the Video Output the requested pane belongs to
@JsonKey(name: 'VideoOutput')
final ReferenceToken videoOutput;
  /// Reference Token of the Pane whose Configuration is requested
@JsonKey(name: 'Pane')
final ReferenceToken pane;
  GetPaneConfiguration({
        required this.videoOutput,
        required this.pane,
  });
}

@JsonSerializable()
class GetPaneConfigurationResponse  {
  /// returns the configuration of the requested pane.
@JsonKey(name: 'PaneConfiguration')
final PaneConfiguration paneConfiguration;
  GetPaneConfigurationResponse({
        required this.paneConfiguration,
  });
}

@JsonSerializable()
class SetPaneConfigurations  {
  /// Token of the video output whose panes to set.
@JsonKey(name: 'VideoOutput')
final ReferenceToken videoOutput;
  /// Pane Configuration to be set.
@JsonKey(name: 'PaneConfiguration')
final PaneConfiguration paneConfiguration;
  SetPaneConfigurations({
        required this.videoOutput,
        required this.paneConfiguration,
  });
}

class SetPaneConfigurationsResponse {}
@JsonSerializable()
class SetPaneConfiguration  {
  /// Token of the video output whose panes to set.
@JsonKey(name: 'VideoOutput')
final ReferenceToken videoOutput;
  /// Pane Configuration to be set.
@JsonKey(name: 'PaneConfiguration')
final PaneConfiguration paneConfiguration;
  SetPaneConfiguration({
        required this.videoOutput,
        required this.paneConfiguration,
  });
}

class SetPaneConfigurationResponse {}
@JsonSerializable()
class CreatePaneConfiguration  {
  /// Token of the video output where the pane shall be created.
@JsonKey(name: 'VideoOutput')
final ReferenceToken videoOutput;
  /// Configuration of the pane to be created.
@JsonKey(name: 'PaneConfiguration')
final PaneConfiguration paneConfiguration;
  CreatePaneConfiguration({
        required this.videoOutput,
        required this.paneConfiguration,
  });
}

@JsonSerializable()
class CreatePaneConfigurationResponse  {
  /// Token of the new pane configuration.
@JsonKey(name: 'PaneToken')
final ReferenceToken paneToken;
  CreatePaneConfigurationResponse({
        required this.paneToken,
  });
}

@JsonSerializable()
class DeletePaneConfiguration  {
  /// Token of the video output where the pane shall be deleted.
@JsonKey(name: 'VideoOutput')
final ReferenceToken videoOutput;
  /// Token of the pane to be deleted.
@JsonKey(name: 'PaneToken')
final ReferenceToken paneToken;
  DeletePaneConfiguration({
        required this.videoOutput,
        required this.paneToken,
  });
}

class DeletePaneConfigurationResponse {}
