/// GENERATED BY OZIBABA
import 'dart:typed_data';
import 'package:json_annotation/json_annotation.dart';

@JsonSerializable()
class EndpointReferenceType  {
  @JsonKey(name: 'Address')
final AttributedURIType address;
  EndpointReferenceType({
        required this.address,
  });
}

class ReferenceParametersType {}
class MetadataType {}
@JsonSerializable()
class RelatesToType  {
  @JsonKey(name: 'value')
final String value;
  @JsonKey(name: 'RelationshipType')
final RelationshipTypeOpenEnum? relationshipType;
  RelatesToType({
        required this.value,
        this.relationshipType,
  });
}


enum RelationshipType {
  @JsonValue("http://www.w3.org/2005/08/addressing/reply")
  //www_w3_org/2005/08/addressing/reply,
}

@JsonSerializable()
class AttributedURIType  {
  @JsonKey(name: 'value')
final String value;
  AttributedURIType({
        required this.value,
  });
}


enum FaultCodesType {
  @JsonValue("tns:InvalidAddressingHeader")
  InvalidAddressingHeader,
  @JsonValue("tns:InvalidAddress")
  InvalidAddress,
  @JsonValue("tns:InvalidEPR")
  InvalidEPR,
  @JsonValue("tns:InvalidCardinality")
  InvalidCardinality,
  @JsonValue("tns:MissingAddressInEPR")
  MissingAddressInEPR,
  @JsonValue("tns:DuplicateMessageID")
  DuplicateMessageID,
  @JsonValue("tns:ActionMismatch")
  ActionMismatch,
  @JsonValue("tns:MessageAddressingHeaderRequired")
  MessageAddressingHeaderRequired,
  @JsonValue("tns:DestinationUnreachable")
  DestinationUnreachable,
  @JsonValue("tns:ActionNotSupported")
  ActionNotSupported,
  @JsonValue("tns:EndpointUnavailable")
  EndpointUnavailable,
}

@JsonSerializable()
class AttributedUnsignedLongType  {
  @JsonKey(name: 'value')
final int value;
  AttributedUnsignedLongType({
        required this.value,
  });
}

@JsonSerializable()
class AttributedQNameType  {
  @JsonKey(name: 'value')
final String value;
  AttributedQNameType({
        required this.value,
  });
}

@JsonSerializable()
class ProblemActionType  {
  @JsonKey(name: 'SoapAction')
final String? soapAction;
  ProblemActionType({
        this.soapAction,
  });
}

