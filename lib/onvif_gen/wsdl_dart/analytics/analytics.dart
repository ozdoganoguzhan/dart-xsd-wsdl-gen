/// GENERATED BY OZIBABA
import 'dart:typed_data';
import 'package:json_annotation/json_annotation.dart';

import 'package:dart_wsdl_gen/onvif_gen/xsd_dart/lib.dart';
class GetServiceCapabilities {}
@JsonSerializable()
class GetServiceCapabilitiesResponse  {
  /// The capabilities for the analytics service is returned in the Capabilities element.
@JsonKey(name: 'Capabilities')
final Capabilities capabilities;
  GetServiceCapabilitiesResponse({
        required this.capabilities,
  });
}

@JsonSerializable()
class Capabilities  {
  /// Indication that the device supports the rules interface and the rules syntax.
@JsonKey(name: 'RuleSupport')
final bool ruleSupport;
  /// Indication that the device supports the scene analytics module interface.
@JsonKey(name: 'AnalyticsModuleSupport')
final bool analyticsModuleSupport;
  /// Indication that the device produces the cell based scene description
@JsonKey(name: 'CellBasedSceneDescriptionSupported')
final bool cellBasedSceneDescriptionSupported;
  /// Indication that the device supports the GetRuleOptions operation on the rules interface
@JsonKey(name: 'RuleOptionsSupported')
final bool ruleOptionsSupported;
  /// Indication that the device supports the GetAnalyticsModuleOptions operation on the analytics interface
@JsonKey(name: 'AnalyticsModuleOptionsSupported')
final bool analyticsModuleOptionsSupported;
  Capabilities({
        required this.ruleSupport,
        required this.analyticsModuleSupport,
        required this.cellBasedSceneDescriptionSupported,
        required this.ruleOptionsSupported,
        required this.analyticsModuleOptionsSupported,
  });
}

@JsonSerializable()
class GetSupportedRules  {
  /// 
/// References an existing Video Analytics configuration. The list of available tokens can be obtained
/// via the Media service GetVideoAnalyticsConfigurations method.
/// 
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  GetSupportedRules({
        required this.configurationToken,
  });
}

@JsonSerializable()
class GetSupportedRulesResponse  {
  @JsonKey(name: 'SupportedRules')
final SupportedRules supportedRules;
  GetSupportedRulesResponse({
        required this.supportedRules,
  });
}

@JsonSerializable()
class CreateRules  {
  /// Reference to an existing VideoAnalyticsConfiguration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  @JsonKey(name: 'Rule')
final Config rule;
  CreateRules({
        required this.configurationToken,
        required this.rule,
  });
}

class CreateRulesResponse {}
@JsonSerializable()
class DeleteRules  {
  /// Reference to an existing VideoAnalyticsConfiguration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  /// References the specific rule to be deleted (e.g. "MyLineDetector"). 
@JsonKey(name: 'RuleName')
final String ruleName;
  DeleteRules({
        required this.configurationToken,
        required this.ruleName,
  });
}

class DeleteRulesResponse {}
@JsonSerializable()
class ModifyRules  {
  /// Reference to an existing VideoAnalyticsConfiguration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  @JsonKey(name: 'Rule')
final Config rule;
  ModifyRules({
        required this.configurationToken,
        required this.rule,
  });
}

class ModifyRulesResponse {}
@JsonSerializable()
class GetRules  {
  /// Reference to an existing VideoAnalyticsConfiguration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  GetRules({
        required this.configurationToken,
  });
}

@JsonSerializable()
class GetRulesResponse  {
  @JsonKey(name: 'Rule')
final Config? rule;
  GetRulesResponse({
        this.rule,
  });
}

@JsonSerializable()
class GetRuleOptions  {
  /// Reference to an SupportedRule Type returned from GetSupportedRules.
@JsonKey(name: 'RuleType')
final String? ruleType;
  /// Reference to an existing analytics configuration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  GetRuleOptions({
        this.ruleType,
        required this.configurationToken,
  });
}

@JsonSerializable()
class GetRuleOptionsResponse  {
  /// A device shall provide respective ConfigOptions.RuleType for each RuleOption if the request does not specify RuleType. The response Options shall not contain any AnalyticsModule attribute.
@JsonKey(name: 'RuleOptions')
final ConfigOptions? ruleOptions;
  GetRuleOptionsResponse({
        this.ruleOptions,
  });
}

@JsonSerializable()
class ConfigOptions  {
  /// 
/// The RuleType the ConfigOptions applies to if the Name attribute is ambiguous.
/// 
@JsonKey(name: 'RuleType')
final String ruleType;
  /// 
/// The Name of the SimpleItemDescription/ElementItemDescription
/// the ConfigOptions applies to.
/// 
@JsonKey(name: 'Name')
final String name;
  /// 
/// Type of the Rule Options represented by a unique QName. 
/// The Type defines the element contained in this structure.
/// This attribute is deprecated since its value must be identical to the embedded element.
/// 
@JsonKey(name: 'Type')
final String type;
  /// 
/// Optional name of the analytics module this constraint applies to. This option is only necessary in cases where different constraints for elements with the same Name exist.
/// 
@JsonKey(name: 'AnalyticsModule')
final String analyticsModule;
  ConfigOptions({
        required this.ruleType,
        required this.name,
        required this.type,
        required this.analyticsModule,
  });
}

@JsonSerializable()
class GetSupportedAnalyticsModules  {
  /// Reference to an existing VideoAnalyticsConfiguration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  GetSupportedAnalyticsModules({
        required this.configurationToken,
  });
}

@JsonSerializable()
class GetSupportedAnalyticsModulesResponse  {
  @JsonKey(name: 'SupportedAnalyticsModules')
final SupportedAnalyticsModules supportedAnalyticsModules;
  GetSupportedAnalyticsModulesResponse({
        required this.supportedAnalyticsModules,
  });
}

@JsonSerializable()
class CreateAnalyticsModules  {
  /// Reference to an existing VideoAnalyticsConfiguration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  @JsonKey(name: 'AnalyticsModule')
final Config analyticsModule;
  CreateAnalyticsModules({
        required this.configurationToken,
        required this.analyticsModule,
  });
}

class CreateAnalyticsModulesResponse {}
@JsonSerializable()
class DeleteAnalyticsModules  {
  /// Reference to an existing Video Analytics configuration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  /// Name of the AnalyticsModule to be deleted.
@JsonKey(name: 'AnalyticsModuleName')
final String analyticsModuleName;
  DeleteAnalyticsModules({
        required this.configurationToken,
        required this.analyticsModuleName,
  });
}

class DeleteAnalyticsModulesResponse {}
@JsonSerializable()
class ModifyAnalyticsModules  {
  /// Reference to an existing VideoAnalyticsConfiguration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  @JsonKey(name: 'AnalyticsModule')
final Config analyticsModule;
  ModifyAnalyticsModules({
        required this.configurationToken,
        required this.analyticsModule,
  });
}

class ModifyAnalyticsModulesResponse {}
@JsonSerializable()
class GetAnalyticsModules  {
  /// Reference to an existing VideoAnalyticsConfiguration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  GetAnalyticsModules({
        required this.configurationToken,
  });
}

@JsonSerializable()
class GetAnalyticsModulesResponse  {
  @JsonKey(name: 'AnalyticsModule')
final Config? analyticsModule;
  GetAnalyticsModulesResponse({
        this.analyticsModule,
  });
}

@JsonSerializable()
class GetAnalyticsModuleOptions  {
  /// Reference to an SupportedAnalyticsModule Type returned from GetSupportedAnalyticsModules.
@JsonKey(name: 'Type')
final String? type;
  /// Reference to an existing AnalyticsConfiguration.
@JsonKey(name: 'ConfigurationToken')
final ReferenceToken configurationToken;
  GetAnalyticsModuleOptions({
        this.type,
        required this.configurationToken,
  });
}

@JsonSerializable()
class GetAnalyticsModuleOptionsResponse  {
  /// List of options for the specified analytics module. The response Options shall not contain any RuleType attribute.
@JsonKey(name: 'Options')
final ConfigOptions? options;
  GetAnalyticsModuleOptionsResponse({
        this.options,
  });
}

